//Для реализации Виртуальных Функций, язык с++ использвует специальную форму позднего связывания - Виртуальные таблицы

//Виртуальная таблица это таблица поиска функции для вызоыва функций в режиме позднего связывания

// еще их называют VTABLE, таблица виртуальных функций, таблица вирутальных методов

// каждая класс использвующий виртуальную функцию имеет свою вирт таблицу
// Виртмульная таблица это статический массив указателей на виртуальные функции котор вызывается обьектом класса 
// Компилятор добавляет указатель на родительский класс . автоматически при создании обеькта. указвыает на вирт табл класса

#include <iostream>

//Тут у нас три виртуальные таблицы. Одна для парент и две для чилд1 и чилд2

class parent //Создалась виртуальная таблица PARENT .  * _vptr этого класса указывает на вирт табл этого класса
{
public:
	// Так же СЮДА компилятор добавляет скрытый указатель на главнй родительский класс с вирт функц 
	// FunctionPointer * _vptr; //так он выглядит. И ОН ОТСЮДА наследуется В дочерние классы Указывая на ТЕКУЩИЕ ОБЬЕКТЫ
// при создании обьекторв классов парент чилд1-2 , * _vptr будет указывать на виртуальную таблицу классов парент чилд1-2
	virtual void f1() {};
	virtual void f2() {};
};

class child1 : public parent //Создалась вирутальная таблица CHILD1 . наследуется * _vptr этого класса указывает на вирт табл этого класса
{
public:
	virtual void f1() {};
};

class child2 : public parent //Создалась виртуальная таблица CHILD2. наследуется * _vptr этого класса указывает на вирт табл этого класса
{
public:
	virtual void f2() {};
};

int main()
{
	parent p; //свой * _vptr указывает на Виртуальную таблицу класса PARENT
	child1 ch1; //свой * _vptr указывает на Виртуальную таблицу класса CHILD1
	child2 ch2; //свой * _vptr указывает на Виртуальную таблицу класса CHILD2

	// У нас есть ДВЕ виртуальные функции. ЭТО f1 и f2. 
	// Каждая виртуальная ТАБЛИЦА имеет две записи на ЭТИ вирутальные функции. Одна на f1 другая на f2
	// При заполнении виртуальных таблиц выбираются наиболее дочерние функции доступ к которым имеют обьекты p ch1 ch2

	//записи в виртуальных таблицах. указываеют на наиболее дочерние методы/функции/переопределения доступ к которым имают обьекты
	
	parent* cptr = &p; //Укзаывает на область памяти где находится обьект П. зхначит вывзается вирт табл класса парент



	return 0;
}

