#include <iostream>

void foo (int *&p) //функция которая принимает значение P и разыменовывает адрес пытаясь получить значение из этой переменной в которой мусор
{
}


int main ()
{
	
	int a=5; //обьявили переменную выделив для нее место в памяти. и инициализировали ее присвоив этому место значение. записав в выделенное место памяти значение целочисленное пять
	int *b=&a;  //обьявили переменную целочисленную как указатель на эту переменную и присваеваем ей значение адреса обьявленной переменной. всегда занимает 4 байта в 32 разрядной системе
	
	std::cout<<b<<"\n"; //выводим на экран в командую строку указатель . т.е выводим присовенный ему адрес памяти на экран
	std::cout<<*b; //разыменовали  указатель с помошью звездочки. в данном случае звездачка как оператор разыменования. т.е выводим значение которое хранится в этом адресе памяти
	
	std::cout<<"\n";
	
	*b = 10; //разыменованному указателю который уже может принимать целочисленные значения присваевамем другое целочисленное значение
	std::cout<<*b<<"\n";
	std::cout<<b<<"\n"; //выводим адрес памяти в котором хранится переменная б. т.к мы перезаписали этот адрес в которой хранилась А и записали туда Б то адрес не изменился
	
	int c=20; //обьявили новую целочисленную переменную и инициализировали
	int *d=&c;  // обьявили указатель на адрес новой целочисленную переменную и инициализровали
	
	std::cout<<d<<"\n"; // выводим новый адрес
	
	std::cout<<sizeof(a)<<"\n"; //выводим размер целочисленной переменной размер состовляет 4 байта 
	std::cout<<sizeof(b)<<"\n"; //выводим размер указателя на адрес целочисленной переменной 8 байт всегда в 64 разрядных системах
	std::cout<<sizeof(c)<<"\n"; //выводим размер целочисленной переменной размер состовляет 4 байта
	std::cout<<sizeof(d)<<"\n";//выводим размер указателя на адрес целочисленной переменной 8 байть всегда в 64 разрядных системах
	
	int a;
	std::cout<<"Enter integer value : ";
	std::cin>>a;
	
	std::cin.ignore(32767,'\n');
	
	std::cout<<a<<" adress memory: ";
	std::cout<<&a<<"\n";
	
	int *b=&a;
	
	std::cout<<*b<<" meaning adressa: ";
	std::cout<<b<<"\n";
	
	int *c;
	std::cout<<"Enter second value: ";
	std::cin>>*c;
	
	std::cin.ignore(32767,'\n');
	
	std::cout<<"adress mamory second value "<<&*c;
	
	
int *p; //обьявлем указатель P. так как он не инициализирован то он указывает на область памяти в которой хранится мусор
foo(p);// вызываем функцию в которую передаем адрес этого указателя
std::cout<<*p; //выводим на экран разыменованное значение переменной , тоесть выводим то что содержится в этой переменной т.е мусор
	
	return 0;
}