#include <iostream>

//Память которую используют программы делется на Сегменты
//Сегмент кода - тут хранится скомпилированная программа. доступен только для чтения 
//Сегмент bss - тут хранятся статические и глобальные переменные инициализированные нулем
//Сегмент данных - тут хранятся статические и глобальные переменные инициализированне данными
//Куча - отсюда выделяется динамическая память
//стек вызовов - тут хранятся параметры функций , локлаьные переменные и прочая информация функций

void boo()
{
	boo();
}

int main()
{
	//Куча
	//отлчеживается память при динамическом выделении

	//при использовании оператора new память выделяется из Сегмента Кучи самой Программы 
	int *a = new int; //для a выделяется 4 байта из кучи
	int *arr = new int[10]; //для arr выделяется 40 байт из кучи

	//адреса выделяемой памяти выделяются не последоватлеьно
	int *a1 = new int;
	int *a2 = new int;
	//у этих двух указателей адреса для выделеной памяти идут не последовательно


	//выделение памяти в куче медленное
	// выделенная память остается выеделенной до тех пор пока не будет освобождена либо программа зкончит свое выполнение
	// доступ к выеделенной памяти только через указатель. разыменование указателя медленнее чем доступ к переменной напрямую
	// куча это большой резервуар. она используется для массивов и структур или классов
	//Куча

	//Стек вызовов

	//стек вызовов остлеживает все актвныве функции от начала программы до до текущей точки выполнения
	//стек вызовов реализован как структура данных 
	
	//Стек вызовов


	//Стек как структура данных
	 
	//int stack[1000000000]; переполнение стека данными
	boo(); переполнение стека. ркурсия
	//Стек как структура данных

	return 0;
}